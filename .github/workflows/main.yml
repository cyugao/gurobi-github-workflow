# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Gurobi path
    env:
      GUROBI_HOME: ${{ github.workspace }}/gurobi1001/linux64
      GRB_LICENSE_FILE: ${{ github.workspace }}/gurobi1001/linux64/gurobi.lic
      GRB_CLASSPATH: ${{ github.workspace }}/gurobi1001/linux64/lib/gurobi.jar

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Cache Gurobi installation
      - name: Cache Gurobi installation
        id: cache-gurobi
        uses: actions/cache@v2
        with:
          path: $GUROBI_HOME
          key: ${{ runner.os }}-gurobi

      # Runs a set of commands using the runners shell
      - name: Set up Gurobi and license
        if: steps.cache-gurobi.outputs.cache-hit != 'true'
        env:
          GRB_WLSACCESSID: ${{ secrets.GRB_WLSACCESSID }}
          GRB_WLSSECRET: ${{ secrets.GRB_WLSSECRET }}
        run: |
          wget https://packages.gurobi.com/10.0/gurobi10.0.1_linux64.tar.gz
          tar -xzf gurobi10.0.1_linux64.tar.gz -C $GITHUB_WORKSPACE

          # Set up environment variables
          echo "WLSACCESSID=$GRB_WLSACCESSID\nWLSSECRET=$GRB_WLSSECRET\nLICENSEID=928929" > $GRB_LICENSE_FILE
      
      - name: Run example script
        run: |
          echo "GRB_CLASSPATH=$GRB_CLASSPATH"
          javac -cp .:$GRB_CLASSPATH Mip1.java
          java -cp .:$GRB_CLASSPATH Mip1


